{{ if eq .Values.environment "azure" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.elasticsearch.name }}-client
  labels:
    {{- include "oht-devops.labels" . | nindent 4 }}
    role: client
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ .Values.elasticsearch.name }}-client
      {{- include "oht-devops.selectorLabels" . | nindent 6 }}
      role: client
  template:
    metadata:
      labels:
        app: {{ .Values.elasticsearch.name }}-client
        {{- include "oht-devops.selectorLabels" . | nindent 8 }}
        role: client
    spec:
      securityContext:
        fsGroup: 0
      initContainers:
      - name: init-sysctl
        image: busybox:1.31.1
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        securityContext:
          privileged: true
      - name: provision-keystore
        image: "{{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}"
        command:
        - sh
        - -c
        - |
          #!/usr/bin/env bash
          set -euo pipefail
          elasticsearch-keystore create
          #for i in /tmp/keystoreSecrets/*/*; do
            #key=$(basename $i)
            #echo "Adding file $i to keystore key $key"
            #elasticsearch-keystore add-file "$key" "$i"
          #done
          # Add the bootstrap password since otherwise the Elasticsearch entrypoint tries to do this on startup
          if [ ! -z ${ELASTIC_PASSWORD+x} ]; then
            echo 'Adding env $ELASTIC_PASSWORD to keystore as key bootstrap.password'
            echo "$ELASTIC_PASSWORD" | elasticsearch-keystore add -x bootstrap.password
          fi
          cp -a /usr/share/elasticsearch/config/elasticsearch.keystore /tmp/keystore/
        env:
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elastic-stack-secrets
              key: ES_BOOTSTRAP_PASSWORD
        volumeMounts:
          - name: keystore
            mountPath: /tmp/keystore
          #{{- range .Values.keystore }}
          #- name: keystore-{{ .secretName }}
            #mountPath: /tmp/keystoreSecrets/{{ .secretName }}
          #{{ end }}
      containers:
      - name: {{ .Values.elasticsearch.name }}-client
        image: "{{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}"
        env:
        - name: discovery.seed_hosts
          value: "{{ .Values.elasticsearch.name }}-discovery.default.svc:9300,{{ .Values.elasticsearch.name }}-data.default.svc:9300,{{ .Values.elasticsearch.name }}-client.default.svc:9200"
        - name: NODE_MASTER
          value: "true"
        - name: NODE_INGEST
          value: "true"
        - name: NODE_DATA
          value: "false"
        - name: HTTP_ENABLE
          value: "true"
        - name: ES_JAVA_OPTS
          value: -Xms256m -Xmx256m
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        resources:
          {{- toYaml .Values.elasticsearch.resources | nindent 12 }}
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport
        volumeMounts:
        - name: {{ .Values.elasticsearch.name }}-data
          mountPath: /usr/share/elasticsearch/data
        - name: {{ .Values.elasticsearch.name }}-config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        - name: {{ .Values.elasticsearch.name }}-config
          mountPath: /usr/share/elasticsearch/config/role_mapping.yml
          subPath: role_mapping.yml
        - name: keystore
          mountPath: /usr/share/elasticsearch/config/elasticsearch.keystore
          subPath: elasticsearch.keystore
        - name: {{ .Values.elasticsearch.name }}-certs
          mountPath: /usr/share/elasticsearch/config/certs/
      volumes:
      - name: elasticsearch-data
        emptyDir: {}
      - name: elasticsearch-config
        configMap:
          name: {{ .Release.Name }}-configmap
          items:
            - key: elasticsearch.yml
              path: elasticsearch.yml
            - key: role_mapping.yml
              path: role_mapping.yml
      - name: keystore
        emptyDir: {}
      - name: {{ .Values.elasticsearch.name }}-certs
        secret:
          secretName: {{ .Values.elasticsearch.name }}-certs
{{ end }}
