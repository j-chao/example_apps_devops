{{ if eq .Values.environment "azure" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.elasticsearch.name }}-master
  labels:
    {{- include "oht-devops.labels" . | nindent 4 }}
    role: master
  annotations:
    checksum/init-config: {{ include (print $.Template.BasePath "/init_configmap.yaml") . | sha256sum }}
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
  serviceName: {{ .Values.elasticsearch.name }}-master
  podManagementPolicy: {{ .Values.elasticsearch.podManagementPolicy }}
  replicas: {{ .Values.elasticsearch.roles.master }}
  selector:
    matchLabels:
      app: {{ .Values.elasticsearch.name }}-master
      {{- include "oht-devops.selectorLabels" . | nindent 6 }}
      role: master
  template:
    metadata:
      labels:
        app: {{ .Values.elasticsearch.name }}-master
        {{- include "oht-devops.selectorLabels" . | nindent 8 }}
        role: master
    spec:
      securityContext:
        fsGroup: 0
      initContainers:
      - name: init-sysctl
        image: busybox:1.31.1
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        securityContext:
          privileged: true
      - name: provision-keystore
        image: "{{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}"
        command:
        - sh
        - /tmp/init-scripts/elasticsearch-init.sh
        env:
        - name: ES_BOOTSTRAP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elastic-stack-secrets
              key: ES_BOOTSTRAP_PASSWORD
        volumeMounts:
          - name: keystore
            mountPath: /tmp/keystore
          - name: elasticsearch-init-config
            mountPath: /tmp/init-scripts
          #{{- range .Values.keystore }}
          #- name: keystore-{{ .secretName }}
            #mountPath: /tmp/keystoreSecrets/{{ .secretName }}
          #{{ end }}
      containers:
      - name: {{ .Values.elasticsearch.name }}-master
        image: "{{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}"
        env:
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_MASTER
          value: "true"
        - name: NODE_INGEST
          value: "false"
        - name: NODE_DATA
          value: "false"
        - name: HTTP_ENABLE
          value: "false"
        - name: ES_JAVA_OPTS
          value: -Xms256m -Xmx256m
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        resources:
          {{- toYaml .Values.elasticsearch.resources | nindent 12 }}
        ports:
        - containerPort: 9300
          name: transport
        volumeMounts:
        - name: {{ .Values.elasticsearch.name }}-data
          mountPath: /usr/share/elasticsearch/data
        - name: {{ .Values.elasticsearch.name }}-config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        - name: keystore
          mountPath: /usr/share/elasticsearch/config/elasticsearch.keystore
          subPath: elasticsearch.keystore
        - name: {{ .Values.elasticsearch.name }}-certs
          mountPath: /usr/share/elasticsearch/config/certs/
      - name: {{ .Values.metricbeat.name }}
        image: "{{ .Values.metricbeat.image.repository }}:{{ .Values.metricbeat.image.tag }}"
        resources:
          {{- toYaml .Values.metricbeat.resources | nindent 12 }}
        volumeMounts:
        - name: {{ .Values.metricbeat.name }}-config
          mountPath: /usr/share/metricbeat/metricbeat.yml
          subPath: metricbeat.yml
        - name: {{ .Values.metricbeat.name }}-config
          mountPath: /usr/share/metricbeat/modules.d/elasticsearch-xpack.yml
          subPath: elasticsearch-xpack.yml
        - name: {{ .Values.elasticsearch.name }}-ca
          mountPath: /usr/share/metricbeat/data/elasticsearch-ca.pem
          subPath: elasticsearch-ca.pem
      volumes:
      - name: elasticsearch-config
        configMap:
          name: {{ .Release.Name }}-configmap
          items:
            - key: elasticsearch.yml
              path: elasticsearch.yml
      - name: {{ .Values.metricbeat.name }}-config
        configMap:
          name: {{ .Release.Name }}-configmap
          items:
            - key: metricbeat.yml
              path: metricbeat.yml
            - key: metricbeat-elasticsearch-xpack.yml
              path: elasticsearch-xpack.yml
      - name: elasticsearch-init-config
        configMap:
          name: {{ .Release.Name }}-init-configmap
          items:
            - key: elasticsearch-init.sh
              path: elasticsearch-init.sh
      - name: keystore
        emptyDir: {}
      - name: {{ .Values.elasticsearch.name }}-ca
        secret:
          secretName: {{ .Values.elasticsearch.name }}-ca
      - name: {{ .Values.elasticsearch.name }}-data
        emptyDir: {}
      - name: {{ .Values.elasticsearch.name }}-certs
        secret:
          secretName: {{ .Values.elasticsearch.name }}-certs

{{ end }}
