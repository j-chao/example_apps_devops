{{ if eq .Values.environment "sandbox" }}
apiVersion: apps/v1
{{ if eq .Values.environment "local" }}
kind: Deployment
{{ else if eq .Values.environment "azure" }}
kind: StatefulSet
{{ end }}
metadata:
  name: {{ .Values.elasticsearch.name }}
  labels:
    {{- include "oht-devops.labels" . | nindent 4 }}
spec:
{{ if eq .Values.environment "local" }}
  replicas: 1
{{ else if eq .Values.environment "azure" }}
  serviceName: {{ .Values.elasticsearch.name }}
  replicas: 3
{{ end }}
  selector:
    matchLabels:
      app: {{ .Values.elasticsearch.name }}
      {{- include "oht-devops.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ .Values.elasticsearch.name }}
        {{- include "oht-devops.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.serviceAccounts.name }}
      securityContext:
        fsGroup: 0
      containers:
        - name: {{ .Values.elasticsearch.name  }}
          image: "{{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}"
          imagePullPolicy: {{ .Values.elasticsearch.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9200
              protocol: TCP
          #livenessProbe:
            #httpGet:
              #path: /
              #port: http
          #readinessProbe:
            #httpGet:
              #path: /
              #port: http
          resources:
            {{- toYaml .Values.elasticsearch.resources | nindent 12 }}
          {{ if eq .Values.environment "local" }}
          env:
          - name: discovery.type
            value: single-node
          #{{ else if eq .Values.environment "azure" }}
          #env:
          #- name: discovery.seed_hosts
            #value: elasticsearch.default.svc
          {{- end}}
          volumeMounts:
          - name: elasticsearch-data
            mountPath: /usr/share/elasticsearch/data
          - name: elasticsearch-config
            mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
            subPath: elasticsearch.yml
      volumes:
      - name: elasticsearch-data
        persistentVolumeClaim:
          claimName: {{ .Values.elasticsearch.name }}-pv
      - name: elasticsearch-config
        configMap:
          name: {{ .Release.Name }}-configmap
          items:
            - key: elasticsearch.yml
              path: elasticsearch.yml
{{ if eq .Values.environment "azure" }}
      initContainers:
      - image: alpine:3.6
        command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
        name: elasticsearch-init
        securityContext:
          privileged: true
{{ end }}
{{ end }}
