apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.kibana.name }}
  labels:
    {{- include "oht-devops.labels" . | nindent 4 }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Values.kibana.name }}
      {{- include "oht-devops.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ .Values.kibana.name }}
        {{- include "oht-devops.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.serviceAccounts.Name }}
      securityContext:
        fsGroup: 0
      initContainers:
      - name: provision-keystore
        image: "{{ .Values.kibana.image.repository }}:{{ .Values.kibana.image.tag }}"
        command:
        - sh
        - -c
        - |
          #!/usr/bin/env bash
          set -euo pipefail
          kibana-keystore create
          #for i in /tmp/keystoreSecrets/*/*; do
            #key=$(basename $i)
            #echo "Adding file $i to keystore key $key"
            #kibana-keystore add-file "$key" "$i"
          #done
          # Add the bootstrap password since otherwise the kibana entrypoint tries to do this on startup
          if [ ! -z ${ELASTIC_PASSWORD+x} ]; then
            echo 'Adding env $ELASTIC_PASSWORD to keystore as key elasticsearch.password'
            echo "$ELASTIC_PASSWORD" | kibana-keystore add -x elasticsearch.password
          fi
          cp -a /usr/share/kibana/data/kibana.keystore /tmp/keystore/
        env:
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elastic-stack-secrets
              key: ES_KIBANA_PASSWORD
        volumeMounts:
          - name: keystore
            mountPath: /tmp/keystore
          #{{- range .Values.keystore }}
          #- name: keystore-{{ .secretName }}
            #mountPath: /tmp/keystoreSecrets/{{ .secretName }}
          #{{ end }}
      containers:
        - name: {{ .Values.kibana.name  }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.kibana.image.repository }}:{{ .Values.kibana.image.tag }}"
          imagePullPolicy: {{ .Values.kibana.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5601
              protocol: TCP
          #livenessProbe:
            #httpGet:
              #path: /
              #port: http
          #readinessProbe:
            #httpGet:
              #path: /
              #port: http
          resources: {{- toYaml .Values.kibana.resources | nindent 12 }}
          volumeMounts:
          - name: kibana-data
            mountPath: /usr/share/kibana/data
          - name: kibana-config
            mountPath: /usr/share/kibana/config
          - name: keystore
            mountPath: /usr/share/kibana/data/kibana.keystore
            subPath:  kibana.keystore
          - name: {{ .Values.elasticsearch.name }}-ca
            mountPath: /usr/share/kibana/data/elasticsearch-ca.pem
            subPath: elasticsearch-ca.pem
          - name: {{ .Values.elasticsearch.name }}-cer
            mountPath: /usr/share/kibana/data/elasticsearch.cer
            subPath: elasticsearch.cer
          - name: {{ .Values.elasticsearch.name }}-key
            mountPath: /usr/share/kibana/data/elasticsearch.key
            subPath: elasticsearch.key
      volumes:
      - name: kibana-data
        persistentVolumeClaim:
          claimName: {{ .Values.kibana.name }}-pv
      - name: kibana-config
        configMap:
          name: {{ .Release.Name }}-configmap
          items:
            - key: kibana.yml
              path: kibana.yml
      - name: keystore
        emptyDir: {}
      - name: {{ .Values.elasticsearch.name }}-ca
        secret:
          secretName: {{ .Values.elasticsearch.name }}-ca
      - name: {{ .Values.elasticsearch.name }}-cer
        secret:
          secretName: {{ .Values.elasticsearch.name }}-cer
      - name: {{ .Values.elasticsearch.name }}-key
        secret:
          secretName: {{ .Values.elasticsearch.name }}-key

